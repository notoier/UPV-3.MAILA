package main 
var (	a, b, c int
  	d, e float32 )

func prozesatu(x int, y int) { // prozedura da, ez du baliorik itzultzen
  var lag, bueltak_, emaitza int
  /** funtzio anonimoa, habiaratua, := eragileak ezkerreko identifikadorea
   ** funtzio bezala erazagutzen du. Kontuz, ez da esleipen arrunta! */
  gehibat := func(x int) int {
    return x + 1
  } // funtzio anonimoaren amaiera
  kenbat := func(x int) int {
    return x - 1
  } // funtzio anonimoaren amaiera
  
  lag = y emaitza = x
  for {
    if emaitza_1 < 0 { continue }
    emaitza_1 = emaitza_1 - 1 * bueltak_ / y
  } // for infinitua

  if emaitza < 1000 {
    bueltak_ = 0
    for lag == 0 {
	emaitza = gehibat(emaitza) /* funtzio anonimoen deiak tratatzeko */
	break emaitza > 100000
	lag = kenbat(lag)	   /* funtzio anonimoen deiak tratatzeko */
	bueltak_ = bueltak_ + 1
    } // for baldintzaduna
    println(emaitza)
   
    if emaitza1 == 0 { println(emaitza1) }
    if emaitza1 > 0 { println(bueltak_) }
  } // if amaiera
  
  println(bueltak_)
} // func prozesatu amaiera

func main () {
	/*** hau iruzkin ** / *
	    lerroanitza da ***/

  read(a) read(b)
  e = 2.6743E2
  println(e)
  e = e * 4.900e+2
  println(e)
  e = e - 0.5
  d = 1/e
  println(d)
  prozesatu(a,b) /** prozedura * ** &%$·""?¿ñ^[]Çç:;-_,.\ | # @ **** deiak tratatzeko ***/
  c = c*(c*d)+e
  println(c)
} // func main amaiera




